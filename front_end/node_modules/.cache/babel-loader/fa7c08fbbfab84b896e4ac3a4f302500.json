{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/SignUp.js\";\nimport React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../actions\";\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = meta => {\n      if (meta.touched && meta.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 14\n          }\n        }, meta.error);\n      }\n    };\n\n    this.renderInput = formProps => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, formProps.icon, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formProps.input, {\n        placeholder: formProps.label,\n        type: formProps.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      })), this.renderError(formProps.meta));\n    };\n\n    this.onSubmit = formValues => {\n      if (formValues.password === formValues.passwordConfirmation) {\n        this.props.createUser(formValues);\n      } else {\n        alert(\"Passwords don't match\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Find the perfect roommate\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signup-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"passwordConfirmation\",\n      type: \"password\",\n      component: this.renderInput,\n      label: \"Password Confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signup-btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n\n  if (!formValues.email) {\n    errors.email = \"You must enter a email\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n\n  if (!formValues.passwordConfirmation) {\n    errors.passwordConfirmation = \"You must confirm password\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"signUp\",\n  validate\n})(SignUp);\nexport default connect(null, {\n  createUser\n})(formWrapped);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/SignUp.js"],"names":["React","reduxForm","Field","connect","createUser","SignUp","Component","renderError","meta","touched","error","renderInput","formProps","icon","input","label","type","onSubmit","formValues","password","passwordConfirmation","props","alert","render","handleSubmit","validate","errors","username","email","formWrapped","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { createUser } from \"../actions\";\n\nclass SignUp extends React.Component {\n  renderError = (meta) => {\n    if (meta.touched && meta.error) {\n      return <div>{meta.error}</div>;\n    }\n  };\n\n  renderInput = (formProps) => {\n    return (\n      <div className=\"field\">\n        {formProps.icon}\n        <input\n          {...formProps.input}\n          placeholder={formProps.label}\n          type={formProps.type}\n        />\n        {this.renderError(formProps.meta)}\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    if (formValues.password === formValues.passwordConfirmation) {\n      this.props.createUser(formValues);\n    } else {\n      alert(\"Passwords don't match\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"signup-page\">\n        <div className=\"signup-form-container\">\n          <h1>Sign Up</h1>\n          <p>Find the perfect roommate</p>\n          <form\n            className=\"signup-form\"\n            onSubmit={this.props.handleSubmit(this.onSubmit)}\n          >\n            <Field\n              name=\"username\"\n              type=\"text\"\n              component={this.renderInput}\n              label=\"Username\"\n            />\n            <Field\n              name=\"email\"\n              type=\"text\"\n              component={this.renderInput}\n              label=\"Email\"\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              component={this.renderInput}\n              label=\"Password\"\n            />\n            <Field\n              name=\"passwordConfirmation\"\n              type=\"password\"\n              component={this.renderInput}\n              label=\"Password Confirmation\"\n            />\n            <button className=\"signup-btn\" type=\"submit\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n  if (!formValues.email) {\n    errors.email = \"You must enter a email\";\n  }\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n  if (!formValues.passwordConfirmation) {\n    errors.passwordConfirmation = \"You must confirm password\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"signUp\",\n  validate,\n})(SignUp);\n\nexport default connect(null, { createUser })(formWrapped);\n"]},"metadata":{},"sourceType":"module"}