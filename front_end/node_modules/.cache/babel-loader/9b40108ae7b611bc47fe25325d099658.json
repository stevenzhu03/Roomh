{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { login } from '../actions';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = meta => {\n      if (meta.touched && meta.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 14\n          }\n        }, meta.error);\n      }\n    };\n\n    this.renderInput = formProps => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, formProps.icon, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formProps.input, {\n        placeholder: formProps.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      })), this.renderError(formProps.meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.login(formValues);\n      localStorage.token = response.token;\n      this.props.history.push(`/users`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login-btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"login\",\n  validate\n})(Login);\nexport default connect(null, {\n  login\n})(formWrapped); // state = {\n//   username: \"\",\n//   password: \"\"\n// }\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n// handleLogIn = (e) => {\n//   e.preventDefault()\n//   fetch('http://localhost:3000/login', {\n//     method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       },\n//       body: JSON.stringify(this.state)\n//   })\n//   .then(resp => resp.json())\n//   .then(response => {\n//     if (response.errors){\n//       alert(response.errors)\n//     } else {\n//       this.props.setUser(response)\n//     }\n//   })\n// }","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js"],"names":["React","reduxForm","Field","connect","login","Login","Component","renderError","meta","touched","error","renderInput","formProps","icon","input","label","onSubmit","formValues","props","localStorage","token","response","history","push","render","handleSubmit","validate","errors","username","password","formWrapped","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { login } from '../actions'\n\n \nclass Login extends React.Component {\n\n  renderError = meta => {\n    if (meta.touched && meta.error) {\n      return <div>{meta.error}</div>\n    }\n  }\n\n  renderInput = formProps => {\n    return (\n      <div className=\"field\">\n        {formProps.icon}\n        <input {...formProps.input} placeholder={formProps.label} />\n        {this.renderError(formProps.meta)}\n        \n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    this.props.login(formValues)\n    localStorage.token = response.token\n    this.props.history.push(`/users`)\n  }\n\n  \n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-form-container\">\n              <h1>Login</h1>\n                <form className=\"login-form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                  <Field name=\"username\" component={this.renderInput} label=\"Username\"/>\n                  <Field name=\"password\" component={this.renderInput} label=\"Password\" />\n                  <button className=\"login-btn\" type=\"submit\" >Login</button>\n                </form>\n            </div>\n      </div>\n    )\n  }\n}\n\nconst validate = formValues => {\n  const errors = {}\n\n  if(!formValues.username) {\n    errors.username = \"You must enter a username\"\n  }\n  if(!formValues.password) {\n    errors.password = \"You must enter a password\"\n  }\n\n  return errors\n}\n\nconst formWrapped = reduxForm({\n  form: \"login\",\n  validate\n})(Login);\n\nexport default connect(null, { login } )(formWrapped)\n\n// state = {\n//   username: \"\",\n//   password: \"\"\n// }\n\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n\n// handleLogIn = (e) => {\n//   e.preventDefault()\n//   fetch('http://localhost:3000/login', {\n//     method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       },\n//       body: JSON.stringify(this.state)\n//   })\n//   .then(resp => resp.json())\n//   .then(response => {\n//     if (response.errors){\n//       alert(response.errors)\n//     } else {\n//       this.props.setUser(response)\n//     }\n//   })\n// }"]},"metadata":{},"sourceType":"module"}