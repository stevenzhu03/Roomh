{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js\";\nimport React from \"react\";\nimport UserCard from \"./UserCard\";\nimport { fetchUsers } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass FindRoomate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sex: \"\",\n      budget: null,\n      age: null\n    };\n\n    this.filterUsers = users => {\n      if (this.state.sex) {}\n\n      const filterSex = users.filter(user => user.sex === this.state.sex);\n      return filterSex;\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  render() {\n    const filteredUsers = this.filterUsers(this.props.users);\n    return this.props.currentUser && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui four stackable cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, filteredUsers.filter(user => user.id !== this.props.currentUser.info.id).map(user => /*#__PURE__*/React.createElement(UserCard, Object.assign({\n      key: user.id\n    }, user, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(FindRoomate);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js"],"names":["React","UserCard","fetchUsers","connect","FindRoomate","Component","state","sex","budget","age","filterUsers","users","filterSex","filter","user","componentDidMount","props","render","filteredUsers","currentUser","id","info","map","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACNC,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAFgC;;AAAA,SAYxCC,WAZwC,GAYzBC,KAAD,IAAW;AACvB,UAAG,KAAKL,KAAL,CAAWC,GAAd,EAAkB,CAEjB;;AACD,YAAMK,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,GAAL,KAAa,KAAKD,KAAL,CAAWC,GAA7C,CAAlB;AACA,aAAOK,SAAP;AACD,KAlBuC;AAAA;;AAQxCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWd,UAAX;AACD;;AAUDe,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,KAAKR,WAAL,CAAiB,KAAKM,KAAL,CAAWL,KAA5B,CAAtB;AAEA,WACE,KAAKK,KAAL,CAAWG,WAAX,iBACA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,aAAa,CAACL,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAY,KAAKJ,KAAL,CAAWG,WAAX,CAAuBE,IAAvB,CAA4BD,EAArE,EAAyEE,GAAzE,CAA8ER,IAAD,iBAC5E,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACM;AAApB,OAA4BN,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CAFF;AASD;;AAhCuC;;AAmC1C,MAAMS,eAAe,GAAIjB,KAAD,IAAW;AACjC,SAAO;AACLK,IAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYA,KADd;AAELQ,IAAAA,WAAW,EAAEb,KAAK,CAACkB,IAAN,CAAWL;AAFnB,GAAP;AAID,CALD;;AAOA,eAAehB,OAAO,CAACoB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,WAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport UserCard from \"./UserCard\";\nimport { fetchUsers } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass FindRoomate extends React.Component {\n\n  state = {\n    sex: \"\",\n    budget: null,\n    age: null,\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  filterUsers = (users) => {\n    if(this.state.sex){\n      \n    }\n    const filterSex = users.filter(user => user.sex === this.state.sex)\n    return filterSex\n  }\n\n  render() {\n    const filteredUsers = this.filterUsers(this.props.users)\n\n    return (\n      this.props.currentUser && (\n      <div className=\"ui four stackable cards\">\n        {filteredUsers.filter(user => user.id !== this.props.currentUser.info.id).map((user) => (\n          <UserCard key={user.id} {...user} />\n        ))}\n      </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users.users,\n    currentUser: state.auth.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUsers })(FindRoomate);\n"]},"metadata":{},"sourceType":"module"}