{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js\";\nimport React from 'react';\nimport UserCard from './UserCard';\nimport { fetchUsers } from '../actions';\nimport { connect } from 'react-redux';\n\nclass FindRoomate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filteredUsers: []\n    };\n    this.filteredUsers = [];\n  }\n\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  componentDidUpdate() {\n    if (this.props.currentUser) {\n      console.log(this.props.users);\n      this.filteredUsers = this.props.users.filter(user => user.id !== this.props.currentUser.info.id);\n    }\n  }\n\n  render() {\n    console.log(this.filteredUsers);\n    return (\n      /*#__PURE__*/\n      // !this.props.currentUser ? <div>LOADING...</div> : (    \n      React.createElement(\"div\", {\n        className: \"ui four stackable cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, this.filteredUsers.map(user => /*#__PURE__*/React.createElement(UserCard, Object.assign({\n        key: user.id\n      }, user, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 49\n        }\n      }))))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(FindRoomate);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js"],"names":["React","UserCard","fetchUsers","connect","FindRoomate","Component","state","filteredUsers","componentDidMount","props","componentDidUpdate","currentUser","console","log","users","filter","user","id","info","render","map","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,aAAa,EAAE;AADX,KAF8B;AAAA,SAUtCA,aAVsC,GAUtB,EAVsB;AAAA;;AAMtCC,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,KAAL,CAAWP,UAAX;AACH;;AAIDQ,EAAAA,kBAAkB,GAAI;AAClB,QAAI,KAAKD,KAAL,CAAWE,WAAf,EAA4B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,WAAKP,aAAL,GAAqB,KAAKE,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,KAAKR,KAAL,CAAWE,WAAX,CAAuBO,IAAvB,CAA4BD,EAAxE,CAArB;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAI;AACNP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,aAAjB;AACA;AAAA;AACI;AACA;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,aAAL,CAAmBa,GAAnB,CAAuBJ,IAAI,iBAAI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,SAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/B,CADL;AAFJ;AAOH;;AA5BqC;;AAgC1C,MAAMK,eAAe,GAAGf,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,CAAYA,KADhB;AAEHH,IAAAA,WAAW,EAAEL,KAAK,CAACgB,IAAN,CAAWX;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAeR,OAAO,CAACkB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,WAAzC,CAAf","sourcesContent":["import React from 'react';\nimport UserCard from './UserCard'\nimport { fetchUsers } from '../actions'\nimport { connect } from 'react-redux';\n\n\nclass FindRoomate extends React.Component {\n\n    state = {\n        filteredUsers: []\n    }\n\n    componentDidMount () {\n        this.props.fetchUsers()\n    }\n\n    filteredUsers = []\n\n    componentDidUpdate () {\n        if (this.props.currentUser) {\n            console.log(this.props.users)\n            this.filteredUsers = this.props.users.filter(user => user.id !== this.props.currentUser.info.id)\n        }\n    }\n    \n    render () {\n        console.log(this.filteredUsers)\n        return (\n            // !this.props.currentUser ? <div>LOADING...</div> : (    \n            <div className=\"ui four stackable cards\">\n                {this.filteredUsers.map(user => <UserCard key={user.id} {...user} />)}\n            </div>\n            \n        ) \n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        currentUser: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { fetchUsers })(FindRoomate)"]},"metadata":{},"sourceType":"module"}