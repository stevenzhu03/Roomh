{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js\";\nimport React from 'react';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = meta => {\n      if (meta.touched && meta.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 7,\n            columnNumber: 14\n          }\n        }, meta.error);\n      }\n    };\n\n    this.renderInput = formProps => {\n      console.log(formProps);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, formProps.icon, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formProps.input, {\n        placeholder: formProps.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      })), this.renderError(formProps.meta));\n    };\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login-btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"login\",\n  validate\n})(Login); // state = {\n//   username: \"\",\n//   password: \"\"\n// }\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n// handleLogIn = (e) => {\n//   e.preventDefault()\n//   fetch('http://localhost:3000/login', {\n//     method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       },\n//       body: JSON.stringify(this.state)\n//   })\n//   .then(resp => resp.json())\n//   .then(response => {\n//     if (response.errors){\n//       alert(response.errors)\n//     } else {\n//       this.props.setUser(response)\n//     }\n//   })\n// }","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js"],"names":["React","Login","Component","renderError","meta","touched","error","renderInput","formProps","console","log","icon","input","label","onSubmit","formValues","render","props","handleSubmit","validate","errors","username","password","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAElCC,WAFkC,GAEpBC,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAAzB,EAAgC;AAC9B,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,IAAI,CAACE,KAAX,CAAP;AACD;AACF,KANiC;;AAAA,SAQlCC,WARkC,GAQpBC,SAAS,IAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,SAAS,CAACG,IADb,eAEE,+CAAWH,SAAS,CAACI,KAArB;AAA4B,QAAA,WAAW,EAAEJ,SAAS,CAACK,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,KAAKV,WAAL,CAAiBK,SAAS,CAACJ,IAA3B,CAHH,CADF;AAOD,KAjBiC;;AAAA,SAmBlCU,QAnBkC,GAmBvBC,UAAU,IAAI;AACvBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACD,KArBiC;AAAA;;AAwBlCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADN,eAEQ;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAE,KAAKP,WAAvC;AAAoD,MAAA,KAAK,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAE,KAAKA,WAAvC;AAAoD,MAAA,KAAK,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFR,CADF,CADF;AAYD;;AArCiC;;AAwCpC,MAAMY,QAAQ,GAAGJ,UAAU,IAAI;AAC7B,QAAMK,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACL,UAAU,CAACM,QAAf,EAAyB;AACvBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,2BAAlB;AACD;;AACD,MAAG,CAACN,UAAU,CAACO,QAAf,EAAyB;AACvBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,2BAAlB;AACD;;AAGD,SAAOF,MAAP;AACD,CAZD;;AAcA,eAAeG,SAAS,CAAC;AACvBC,EAAAA,IAAI,EAAE,OADiB;AAEvBL,EAAAA;AAFuB,CAAD,CAAT,CAGZlB,KAHY,CAAf,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n \nclass Login extends React.Component {\n\n  renderError = meta => {\n    if (meta.touched && meta.error) {\n      return <div>{meta.error}</div>\n    }\n  }\n\n  renderInput = formProps => {\n    console.log(formProps)\n    return (\n      <div className=\"field\">\n        {formProps.icon}\n        <input {...formProps.input} placeholder={formProps.label} />\n        {this.renderError(formProps.meta)}\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    console.log(formValues)\n  }\n\n  \n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-form-container\">\n              <h1>Login</h1>\n                <form className=\"login-form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                  <Field name=\"username\" component={this.renderInput} label=\"Username\"/>\n                  <Field name=\"password\" component={this.renderInput} label=\"Password\" />\n                  <button className=\"login-btn\" type=\"submit\" >Login</button>\n                </form>\n            </div>\n      </div>\n    )\n  }\n}\n\nconst validate = formValues => {\n  const errors = {}\n\n  if(!formValues.username) {\n    errors.username = \"You must enter a username\"\n  }\n  if(!formValues.password) {\n    errors.password = \"You must enter a password\"\n  }\n\n\n  return errors\n}\n\nexport default reduxForm({\n  form: \"login\",\n  validate\n})(Login);\n\n// state = {\n//   username: \"\",\n//   password: \"\"\n// }\n\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n\n// handleLogIn = (e) => {\n//   e.preventDefault()\n//   fetch('http://localhost:3000/login', {\n//     method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       },\n//       body: JSON.stringify(this.state)\n//   })\n//   .then(resp => resp.json())\n//   .then(response => {\n//     if (response.errors){\n//       alert(response.errors)\n//     } else {\n//       this.props.setUser(response)\n//     }\n//   })\n// }"]},"metadata":{},"sourceType":"module"}