{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/EditProfile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { confirmMatch } from \"../actions\";\nimport ImageUploader from \"./ImageUploader\";\n\nclass EditProfile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: this.props.currentUser.info.name,\n      summary: this.props.currentUser.info.name,\n      image: null\n    };\n\n    this.clickHandler = (user_id, matcher_id) => {\n      this.props.confirmMatch(user_id, matcher_id);\n    };\n\n    this.changeHandler = event => {\n      formdata.append(\"image\", this.state.image);\n      fetch(`http://localhost:3000/user/${this.props.currentUser.info.id}/upload_img`, {\n        method: \"POST\",\n        // headers: {\n        //     'Content-Type': 'multipart/form-data',\n        // },\n        body: formdata\n      });\n    };\n\n    this.selectImage = image => {\n      this.setState({\n        image\n      });\n    };\n  }\n\n  render() {\n    return !this.props.currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ImageUploader, {\n      selectImage: this.selectImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  confirmMatch\n})(EditProfile);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/EditProfile.js"],"names":["React","connect","confirmMatch","ImageUploader","EditProfile","Component","state","name","props","currentUser","info","summary","image","clickHandler","user_id","matcher_id","changeHandler","event","formdata","append","fetch","id","method","body","selectImage","setState","render","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4BH,IAD9B;AAEJI,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4BH,IAFjC;AAGJK,MAAAA,KAAK,EAAE;AAHH,KADgC;;AAAA,SAOxCC,YAPwC,GAOzB,CAACC,OAAD,EAAUC,UAAV,KAAyB;AACtC,WAAKP,KAAL,CAAWN,YAAX,CAAwBY,OAAxB,EAAiCC,UAAjC;AACD,KATuC;;AAAA,SAWxCC,aAXwC,GAWvBC,KAAD,IAAW;AAEzBC,MAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyB,KAAKb,KAAL,CAAWM,KAApC;AAEAQ,MAAAA,KAAK,CAAE,8BAA6B,KAAKZ,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,CAA4BW,EAAG,aAA9D,EAA4E;AAC7EC,QAAAA,MAAM,EAAE,MADqE;AAE7E;AACA;AACA;AACAC,QAAAA,IAAI,EAAEL;AALuE,OAA5E,CAAL;AAOD,KAtBuC;;AAAA,SAwBxCM,WAxBwC,GAwBzBZ,KAAD,IAAW;AACvB,WAAKa,QAAL,CAAc;AAACb,QAAAA;AAAD,OAAd;AACD,KA1BuC;AAAA;;AA4BxCc,EAAAA,MAAM,GAAG;AACP,WAAO,CAAC,KAAKlB,KAAL,CAAWC,WAAZ,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,gBAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAE,KAAKe,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF;AAOD;;AApCuC;;AAuC1C,MAAMG,eAAe,GAAIrB,KAAD,IAAW;AACjC,SAAO;AAAEG,IAAAA,WAAW,EAAEH,KAAK,CAACsB,IAAN,CAAWnB;AAA1B,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,WAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { confirmMatch } from \"../actions\";\nimport ImageUploader from \"./ImageUploader\";\n\nclass EditProfile extends React.Component {\n  state = {\n      name: this.props.currentUser.info.name, \n      summary: this.props.currentUser.info.name,\n      image: null\n  };\n\n  clickHandler = (user_id, matcher_id) => {\n    this.props.confirmMatch(user_id, matcher_id);\n  };\n\n  changeHandler = (event) => {\n    \n    formdata.append(\"image\", this.state.image)\n\n    fetch(`http://localhost:3000/user/${this.props.currentUser.info.id}/upload_img`, {\n        method: \"POST\",\n        // headers: {\n        //     'Content-Type': 'multipart/form-data',\n        // },\n        body: formdata\n    })\n  }\n\n  selectImage = (image) => {\n    this.setState({image})\n  }\n\n  render() {\n    return !this.props.currentUser ? (\n      <div>Loading ...</div>\n    ) : (\n      <div>\n        <ImageUploader selectImage={this.selectImage} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { currentUser: state.auth.currentUser };\n};\n\nexport default connect(mapStateToProps, { confirmMatch })(EditProfile);\n"]},"metadata":{},"sourceType":"module"}