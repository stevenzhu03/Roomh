{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/SignUp.js\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form'; // const renderInput = props => <Input/>\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  renderInput(formProps) {\n    console.log(formProps);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formProps.input, {\n      placeholder: formProps.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, formProps.meta.error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signup-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      label: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      component: this.renderInput,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"passwordConfirmation\",\n      component: this.renderInput,\n      label: \"Password Confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n\n  if (!formValues.email) {\n    errors.email = \"You must enter a email\";\n  }\n\n  if (!formValues.password) {\n    errors.title = \"You must enter a password\";\n  }\n\n  if (!formValues.passwordConfirmation) {\n    errors.title = \"You must confirm password\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"signUp\",\n  validate\n})(SignUp); // state = { \n//   username: \"\",\n//   password: \"\",\n//   age: null,\n//   passwordConfirmation: \"\"\n// }\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n// handleSubmit = (e) => {\n//   e.preventDefault()\n//   if (this.state.password === this.state.passwordConfirmation){\n//     fetch('http://localhost:3000/signup', {\n//       method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         username: this.state.username,\n//         password: this.state.password,\n//         age: parseInt(this.state.age)\n//       })\n//     })\n// .then(resp => resp.json())\n//     .then(response => {\n//       if (response.errors) {\n//         alert(response.errors)\n//       } else {\n//         this.props.setUser(response)\n//       }\n//     }\n//     )\n//   } else {\n//     alert(\"Passwords don't match\")\n//   }\n// }","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/SignUp.js"],"names":["React","reduxForm","Field","SignUp","Component","onSubmit","formValues","console","log","renderInput","formProps","input","label","meta","error","render","props","handleSubmit","validate","errors","username","email","password","title","passwordConfirmation","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {reduxForm, Field} from 'redux-form'\n \n// const renderInput = props => <Input/>\n\nclass SignUp extends React.Component {\n\n  renderInput(formProps) {\n    console.log(formProps)\n    return (\n      <div className=\"field\">\n        <input {...formProps.input} placeholder={formProps.label} />\n        <div>{formProps.meta.error}</div>\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    console.log(formValues)\n  }\n\n  render() {\n    return (\n            <div className=\"signup-form-container\">\n                <form className=\"signup-form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                  <Field name=\"username\" component={this.renderInput} label=\"Username\" />\n                  <Field name=\"email\" component={this.renderInput} label=\"Email\" />\n                  <Field name=\"password\" component={this.renderInput} label=\"Password\" />\n                  <Field name=\"passwordConfirmation\" component={this.renderInput} label=\"Password Confirmation\" />\n                  <button type=\"submit\" >Submit</button>\n                </form>\n            </div>\n    )\n  }\n  \n}\n\nconst validate = formValues => {\n  const errors = {}\n\n  if(!formValues.username) {\n    errors.username = \"You must enter a username\"\n  }\n  if(!formValues.email) {\n    errors.email = \"You must enter a email\"\n  }\n  if(!formValues.password) {\n    errors.title = \"You must enter a password\"\n  }\n  if(!formValues.passwordConfirmation) {\n    errors.title = \"You must confirm password\"\n  }\n\n  return errors\n}\n\nexport default reduxForm({\n  form: \"signUp\",\n  validate\n})(SignUp);\n\n\n\n\n          // state = { \n          //   username: \"\",\n          //   password: \"\",\n          //   age: null,\n          //   passwordConfirmation: \"\"\n          // }\n        \n          // handleChange = (event) => {\n          //   this.setState({\n          //     [event.target.name]: event.target.value\n          //   })\n          // }\n        \n          // handleSubmit = (e) => {\n          //   e.preventDefault()\n          //   if (this.state.password === this.state.passwordConfirmation){\n          //     fetch('http://localhost:3000/signup', {\n          //       method: 'POST',\n          //       headers: { \n          //         'Content-Type': 'application/json',\n          //         'Accept': 'application/json'\n          //       },\n          //       body: JSON.stringify({\n          //         username: this.state.username,\n          //         password: this.state.password,\n          //         age: parseInt(this.state.age)\n          //       })\n          //     })\n              // .then(resp => resp.json())\n          //     .then(response => {\n          //       if (response.errors) {\n          //         alert(response.errors)\n          //       } else {\n          //         this.props.setUser(response)\n          //       }\n          //     }\n          //     )\n          //   } else {\n          //     alert(\"Passwords don't match\")\n          //   }\n          // }"]},"metadata":{},"sourceType":"module"}