{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js\";\nimport React from 'react';\nimport UserCard from './UserCard';\nimport { fetchUsers } from '../actions';\nimport { connect } from 'react-redux';\n\nclass FindRoomate extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // !this.props.currentUser ? <div>LOADING...</div> : (    \n      React.createElement(\"div\", {\n        className: \"ui four stackable cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, filteredUsers = this.props.users.filter(user => user.id !== this.props.currentUser.id), this.props.fil.map(user => /*#__PURE__*/React.createElement(UserCard, Object.assign({\n        key: user.id\n      }, user, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 45\n        }\n      }))))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users,\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(FindRoomate);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/FindRoomate.js"],"names":["React","UserCard","fetchUsers","connect","FindRoomate","Component","componentDidMount","props","render","filteredUsers","users","filter","user","id","currentUser","fil","map","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAEtCC,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,KAAL,CAAWL,UAAX;AACH;;AAEDM,EAAAA,MAAM,GAAI;AACN;AAAA;AACI;AACA;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,aAAa,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY,KAAKN,KAAL,CAAWO,WAAX,CAAuBD,EAAnE,CADrB,EAEK,KAAKN,KAAL,CAAWQ,GAAX,CAAeC,GAAf,CAAmBJ,IAAI,iBAAI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,SAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3B,CAFL;AAFJ;AAQH;;AAfqC;;AAmB1C,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYA,KADhB;AAEHI,IAAAA,WAAW,EAAEI,KAAK,CAACC,IAAN,CAAWL;AAFrB,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAACc,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,WAAzC,CAAf","sourcesContent":["import React from 'react';\nimport UserCard from './UserCard'\nimport { fetchUsers } from '../actions'\nimport { connect } from 'react-redux';\n\n\nclass FindRoomate extends React.Component {\n\n    componentDidMount () {\n        this.props.fetchUsers()\n    }\n    \n    render () {\n        return (\n            // !this.props.currentUser ? <div>LOADING...</div> : (    \n            <div className=\"ui four stackable cards\">\n                {filteredUsers = this.props.users.filter(user => user.id !== this.props.currentUser.id)}\n                {this.props.fil.map(user => <UserCard key={user.id} {...user} />)}\n            </div>\n            \n        ) \n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users.users,\n        currentUser: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { fetchUsers })(FindRoomate)"]},"metadata":{},"sourceType":"module"}