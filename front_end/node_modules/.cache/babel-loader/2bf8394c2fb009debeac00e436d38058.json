{"ast":null,"code":"var _jsxFileName = \"/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js\";\nimport React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = meta => {\n      if (meta.touched && meta.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 14\n          }\n        }, meta.error);\n      }\n    };\n\n    this.renderInput = formProps => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, formProps.icon, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formProps.input, {\n        placeholder: formProps.label,\n        type: formProps.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      })), this.renderError(formProps.meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.login(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"username\",\n      component: this.renderInput,\n      label: \"Username\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"login-btn\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"login\",\n  validate\n})(Login);\nexport default connect(null, {\n  login\n})(formWrapped);","map":{"version":3,"sources":["/Users/stevenzhu/Development/code/Flatiron School Final Projects/Roomh/front_end/src/components/Login.js"],"names":["React","reduxForm","Field","connect","login","Login","Component","renderError","meta","touched","error","renderInput","formProps","icon","input","label","type","onSubmit","formValues","props","render","handleSubmit","validate","errors","username","password","formWrapped","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions\";\n\nclass Login extends React.Component {\n  renderError = (meta) => {\n    if (meta.touched && meta.error) {\n      return <div>{meta.error}</div>;\n    }\n  };\n\n  renderInput = (formProps) => {\n    return (\n      <div className=\"field\">\n        {formProps.icon}\n        <input\n          {...formProps.input}\n          placeholder={formProps.label}\n          type={formProps.type}\n        />\n        {this.renderError(formProps.meta)}\n      </div>\n    );\n  };\n\n  onSubmit = (formValues) => {\n    this.props.login(formValues);\n  };\n\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"login-form-container\">\n          <h1>Login</h1>\n          <form\n            className=\"login-form\"\n            onSubmit={this.props.handleSubmit(this.onSubmit)}\n          >\n            <Field\n              name=\"username\"\n              component={this.renderInput}\n              label=\"Username\"\n              type=\"text\"\n            />\n            <Field\n              name=\"password\"\n              component={this.renderInput}\n              label=\"Password\"\n              type=\"password\"\n            />\n            <button className=\"login-btn\" type=\"submit\">\n              Login\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"You must enter a username\";\n  }\n  if (!formValues.password) {\n    errors.password = \"You must enter a password\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: \"login\",\n  validate,\n})(Login);\n\nexport default connect(null, { login })(formWrapped);\n"]},"metadata":{},"sourceType":"module"}